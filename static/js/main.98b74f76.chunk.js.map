{"version":3,"sources":["reportWebVitals.js","api/api.js","components/SearchInput/SearchInputStyles.js","store/reducers/searchReducer.js","components/SearchInput/SearchInput.jsx","hooks/use-debounce.js","containers/search/SearchStyles.js","containers/search/Search.jsx","store/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","process","headers","Accept","searchAPI","subject","get","res","data","SearchInputStyles","makeStyles","theme","root","padding","display","alignItems","input","marginLeft","spacing","flex","iconButton","paddingW","paddingLeft","paddingRight","SET_PROJECTS","initialState","projects","setProjects","type","searchReducer","state","action","SearchInput","updateProjects","dispatch","useDispatch","classes","useState","searchTerm","setSearchTerm","isSearching","setIsSearching","isResults","setIsResult","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","length","items","total_count","Paper","component","className","InputBase","placeholder","inputProps","onChange","e","target","Container","maxWidth","Grid","Typography","variant","color","searchStyles","ul","margin","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","mainContent","minHeight","titleContent","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","card","height","flexDirection","cardMedia","cardContent","Copyright","align","Link","href","Date","getFullYear","Search","useSelector","search","Fragment","CssBaseline","AppBar","position","Toolbar","noWrap","container","item","xs","map","project","sm","md","Card","CardMedia","image","owner","avatar_url","title","CardContent","gutterBottom","name","description","stargazers_count","watchers_count","CardActions","Button","size","html_url","id","Box","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","ThunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98b74f76.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL,\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n    },\r\n});\r\n\r\nexport const searchAPI = {\r\n    getSearch(subject) {\r\n        return instance.get(`search/repositories?q=${subject}`)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const SearchInputStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    paddingW: {\r\n        paddingLeft: '10px',\r\n        paddingRight: '10px',\r\n    }\r\n}));","const SET_PROJECTS = 'SET_PROJECTS'\r\n\r\nlet initialState = {\r\n    projects: []\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROJECTS:\r\n            return {...state, projects: [...action.projects]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setProjects = (projects) => ({type: SET_PROJECTS, projects})\r\n\r\nexport default searchReducer","import React, {useEffect, useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {searchAPI} from \"../../api/api\";\r\nimport useDebounce from \"../../hooks/use-debounce\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {SearchInputStyles} from \"./SearchInputStyles\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setProjects} from \"../../store/reducers/searchReducer\";\r\n\r\nconst SearchInput = ({updateProjects}) => {\r\n    const dispatch = useDispatch();\r\n    const classes = SearchInputStyles();\r\n\r\n    // Search term\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    // Searching status (whether there is pending API request)\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [isResults, setIsResult] = useState(false);\r\n    // As a result the API call should only fire once user stops typing\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (debouncedSearchTerm && debouncedSearchTerm.length >= 3) {\r\n                setIsSearching(true);\r\n\r\n                searchAPI.getSearch(debouncedSearchTerm).then(res => {\r\n                    setIsSearching(false);\r\n\r\n                    dispatch(setProjects(res.items))\r\n\r\n                    res.total_count ? setIsResult(false) : setIsResult(true)\r\n                });\r\n            } else {\r\n                dispatch(setProjects([]))\r\n            }\r\n        },\r\n        [debouncedSearchTerm]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Paper component=\"form\" className={classes.root}>\r\n                <InputBase\r\n                    className={classes.input}\r\n                    placeholder=\"Search\"\r\n                    inputProps={{'aria-label': 'search'}}\r\n                    onChange={e => setSearchTerm(e.target.value)}\r\n                />\r\n            </Paper>\r\n\r\n            {isSearching && (\r\n                <Container maxWidth=\"md\" className={classes.paddingW}>\r\n                    <Grid>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\">\r\n                            Searching...\r\n                        </Typography>\r\n                    </Grid>\r\n                </Container>\r\n            )}\r\n\r\n            {isResults && (\r\n                <Container maxWidth=\"md\" className={classes.paddingW}>\r\n                    <Grid>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\">\r\n                            No results\r\n                        </Typography>\r\n                    </Grid>\r\n                </Container>\r\n            )}\r\n\r\n            {(debouncedSearchTerm.length < 3) && (\r\n                <Container maxWidth=\"md\" className={classes.paddingW}>\r\n                    <Grid>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\">\r\n                            The minimum number of characters is 3\r\n                        </Typography>\r\n                    </Grid>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchInput\r\n","import {useEffect, useState} from 'react';\r\n\r\nexport default function useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            // Update debounced value after delay\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            // Cancel the timeout if value changes (also on delay change or unmount)\r\n            // This is how we prevent debounced value from updating if value is changed ...\r\n            // .. within the delay period. Timeout gets cleared and restarted.\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n\r\n    return debouncedValue;\r\n}\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const searchStyles = makeStyles((theme) => ({\r\n    '@global': {\r\n        ul: {\r\n            margin: 0,\r\n            padding: 0,\r\n            listStyle: 'none',\r\n        },\r\n    },\r\n    appBar: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    },\r\n    mainContent: {\r\n        minHeight: 'calc(100vh - 230px)',\r\n    },\r\n    titleContent: {\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    footer: {\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        marginTop: theme.spacing(8),\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: theme.spacing(5),\r\n            paddingBottom: theme.spacing(5),\r\n        },\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}));","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport {searchStyles} from \"./SearchStyles\";\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                Search on GitHub\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst Search = () => {\r\n    const {projects} = useSelector((state) => state.search)\r\n    const classes = searchStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <AppBar position=\"static\" color=\"primary\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n                        Search on GitHub\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/* Main */}\r\n            <Container maxWidth=\"md\" component=\"main\" className={classes.mainContent}>\r\n                <Grid className={classes.titleContent}>\r\n                    <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\" component=\"p\">\r\n                        Search on GitHub\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <SearchInput/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={4}>\r\n                    {projects.map((project) => (\r\n                        <Grid item key={project.id} xs={12} sm={6} md={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia\r\n                                    className={classes.cardMedia}\r\n                                    image={project.owner.avatar_url}\r\n                                    title=\"Image\"\r\n                                />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {project.name}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom>\r\n                                        {project.description}\r\n                                    </Typography>\r\n                                    <Typography color=\"textSecondary\">\r\n                                        Stargazers count: {project.stargazers_count}\r\n                                    </Typography>\r\n                                    <Typography color=\"textSecondary\">\r\n                                        Watchers count: {project.watchers_count}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" href={project.html_url} target=\"_blank\">\r\n                                        View\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n            {/* End main */}\r\n\r\n            {/* Footer */}\r\n            <Container maxWidth=\"md\" component=\"footer\">\r\n                <Box className={classes.footer}>\r\n                    <Copyright/>\r\n                </Box>\r\n            </Container>\r\n            {/* End footer */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Search","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport ThunkMiddleware from 'redux-thunk'\r\nimport searchReducer from \"./reducers/searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    search: searchReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, compose(\r\n    applyMiddleware(ThunkMiddleware)\r\n))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Search from \"./containers/search/Search\";\r\nimport {Provider} from 'react-redux'\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Search/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}